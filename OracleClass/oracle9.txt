Sub Queries
============
We will declare query inside another query such concept is called sub query.

In sub query, first inner query will execute then parent query.

Sub queries are used to select the records based on unknown values.

Sub queries can be nested upto 32 levels.

We have following important sub queries.

1) Single Row Sub query 

2) Multiple Row Sub query 

3) Multiple Column Sub query 


1) Single Row Sub query 
------------------------
If a sub query returns only one row is called single row sub query.

ex:
	Query 
	-----
		select * from emp where ename='Alan';

	Sub-Query 
	---------
		select * from emp where ename=(select ename from emp where eid=201);


ex:
----
	Query 
	-----
		select * from emp where eid=201 and ename='Alan';

	Sub-Query
	---------
		select * from emp where 
		eid=(select eid from emp where ename='Alan') 
		and 
		ename=(select ename from emp where esal=9000);


Q) Write a query to display employees information whose salary is greater then Kelvin salary?

	select * from emp where esal>(select esal from emp where ename='Kelvin');



Q) Write a query to display second highest salary from emp table?

	select max(esal) from emp where esal<(select max(esal) from emp);


2) Multiple Row Sub query 
----------------------------
If sub query returns more then one row is called multiple row sub query.

In multiple row sub query we need to use multiple row operators.

We have three multiple row operators.

1) AND 

2) OR 

3) NOT 

ex:
--
	select * from emp where esal > ALL (select esal from emp where deptno=10);

	select * from emp where esal > ANY (select esal from emp where deptno=10);

	select * from emp where esal < ANY (select esal from emp where deptno=10);

	select * from emp where esal IN (select esal from emp where deptno=10);



3) Multiple Column Sub query
--------------------------
If a sub query returns more one column is called multiple column sub query.

In multiple column sub query we need to use IN operator.

ex:
---
	select * from emp where(eid,ename,esal) IN (select eid,ename,esal from emp);

	select eid,ename,esal from emp where(eid,ename,esal) IN (select eid,ename,esal from emp);



Q) Write a query to display last three records from employee table?

	SQL
	----
	select * from emp where rownum<=3 order by eid desc;


	Sub Query 
	--------
	select * from (select * from emp order by eid desc) where rownum<=3;


Merge Command 
=============
Merge command is a combination of insert and update command.

student10
---------
drop table student10;
create table student10(sno number(3),sname varchar2(10),sadd varchar2(12));
insert into student10 values(101,'raja','hyd');
insert into student10 values(102,'ravi','delhi');
insert into student10 values(103,'ramana','vizag');
commit;

student20
--------
drop table student20;
create table student20(sno number(3),sname varchar2(10),sadd varchar2(12));
insert into student20 values(103,'Alan','USA');
insert into student20 values(104,'Jose','UAE');
commit;

merge into student10 s1
using student20 s2
ON(s1.sno=s2.sno)
when matched then 
update set sname=s2.sname,sadd=s2.sadd
when not matched then 
insert(sno,sname,sadd) values(s2.sno,s2.sname,s2.sadd);
 
select * from student10; // 2 rows merged 
select * from student20;  


Q) What is the difference between RDBMS and MongoDB ?

RDBMS							MongoDB
------							-----------
It is a relational database.				It is a non-relational database.
							(It is a document based database)

It does not store the data in key and value pair.	It stores the data in key and value pair.


It supports structured query language.			It supports JSON query language.


It is not designed for hierarchical data.		It designed for hierarchical data.


It contains tables.					It contains Collections.

It is row based.					It is document based.

It is column based.					It is field based.

It is slower.						It is faster.



PL/SQL 
=======
PL/SQL stands for Procedural Language extensions to Structured Query Language.

PL/SQL gives following important features.

1) We can achieve programming features like control statements, loops and etc.

2) It reduces network traffic.

3) We can display custom messages by using concept of exception handling.

4) We can perform related operations by using concept of triggers.

5) We can save the source code permanently to database for repeated execution.

PL/SQL Block 
===========
A PL/SQL program is also known as PL/SQL block.

syntax:
------
	DECLARE
	-
	-	// Declaration Section 
	-
	BEGIN
	-
	-	// Executable Section 
	-
	EXCEPTION
	-
	-	// Exception Section 
	-
	END;
	/

	Here '/' is used to submit the PL/SQL block in a database.



Declaration Section 
---------------------
Declaration section is used to declare variables, exceptions, cursors and etc.
It is optional section.

Executable Section 
-------------------
Executable section contains actual code of a PL/SQL block.
It is mandatory section.

Exception Section
-------------------
Execution section will execute when any exception raised in our PL/SQL block.
It is optional section.

To see the output in PL/SQL we need to execute below command.
ex:
	SQL> set serveroutput on 


Q) Write a PL/SQL program to display Hello World?

	BEGIN
	DBMS_OUTPUT.PUT_LINE('Hello World');
	END;
	/


Q) Write a PL/SQL program to perform sum of two numbers?

	DECLARE 
	A number;
	B number;
	C number;
	BEGIN
	A:=10;
	B:=20;	
	C:=A+B;
	DBMS_OUTPUT.PUT_LINE(C);
	END;
	/

Declaration and initialization using single line 
-------------------------------------------------
ex:
	DECLARE 
	A number:=10;
	B number:=20;
	C number:=A+B;
	BEGIN
	DBMS_OUTPUT.PUT_LINE(C);
	END;
	/	

Using '&' symbol we can read dynamic inputs.
ex:
	DECLARE 
	A number(3);
	B number(3);
	C number(6);
	BEGIN
	A:=&a;
	B:=&b;
	C:=A+B;
	DBMS_OUTPUT.PUT_LINE('sum of two numbers is ='||C);
	END;
	/

In PL/SQL we can perform DML operations.

Q) Write a PL/SQL program to insert a record into student table?

	DECLARE 
	L_sno  number(3);
	L_sname varchar2(10);
	L_sadd varchar2(12);
	BEGIN
	L_sno:=&sno;
	L_sname:='&sname';
	L_sadd:='&sadd';
	insert into student values(L_sno,L_sname,L_sadd);
	DBMS_OUTPUT.PUT_LINE('Record Inserted');
	END;
	/


Q) Write a PL/SQL program to update student name based on student number?

	DECLARE 
	L_sno number(3);
	BEGIN
	L_sno:=&sno;
	update student set sname='rani' where sno=L_sno;
	DBMS_OUTPUT.PUT_LINE('Record Updated');
	END;
	/


Q) Write a PL/SQL program to delete student record based on student number?

	DECLARE 
	L_sno number(3);
	BEGIN
	L_sno:=&sno;
	delete from student where sno=L_sno;
	DBMS_OUTPUT.PUT_LINE('Record Deleted');
	END;
	/





















































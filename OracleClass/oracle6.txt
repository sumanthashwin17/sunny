3) primary key 
==============
A primary key is a combination of NOT NULL and UNIQUE constraint.

It does not accept null values and duplicate values.

A table can have only one primary key.

It can be created at column level as well as table level.

column level
------------
drop table student;

create table student(sno number(3) primary key,sname varchar2(10),sadd varchar2(12));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi'); //invalid 

insert into student values(null,'ramana','vizag'); //invalid 

commit;


table level
------------
drop table student;

create table student(sno number(3),sname varchar2(10),sadd varchar2(12), primary key(sno));

insert into student values(101,'raja','hyd');

insert into student values(101,'ravi','delhi');

insert into student values(null,'ramana','vizag');

commit;

4) Foreign key 
===============
A foreign key is used to establish the relationship between two tables.

This relationship is also known as parent and child relationship or master and detailed relationship.

To establish the relationship between two tables. A parent table must have primary key or unique key 
and child table must have foreign key.

A foreign key will accept only those values which are present in primary key.

A foreign key name may or may not match with primary key column name but datatype must match.

A foreing key can accept duplicates and null values.

Diagram: oracle6.1


parent table 
--------------
drop table college;
create table college(sno number(3) primary key,sname varchar2(10),sadd varchar2(12));
insert into college values(101,'raja','hyd');
insert into college values(102,'ravi','delhi');
insert into college values(103,'ramana','vizag');
commit;

child table 
-----------
drop table library;
create table library(roll_no number(3) REFERENCES college(sno),book_name varchar2(10));
insert into library values(101,'java');
insert into library values(102,'oracle');
insert into library values(103,'HTML');
insert into library values(103,'CSS');
insert into library values(null,'react');
commit;

We can drop the table as given below.

ex:
	drop table library;
	drop table college;

5) CHECK 
=========
A check constraint is used to describe domain of a column.

Here domain means what type of values a column must accept.

A check constraint can be created at column level as well as table level.

column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10),smarks number(3) CHECK(smarks<=100));

insert into student values(101,'raja',78);

insert into student values(102,'ravi',100);

insert into student values(103,'ramana',210); //invalid 

commit;

column level
-------------
drop table student;

create table student(sno number(3),sname varchar2(10),
	smarks number(3) CHECK(smarks between 0 to 100);

insert into student values(101,'raja',78);

insert into student values(102,'ravi',100);

insert into student values(103,'ramana',210); //invalid 

commit;

column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10) check(sname=upper(sname)),smarks number(3));

insert into student values(101,'RAJA',78); 

insert into student values(102,'ravi',100); //invalid 

insert into student values(103,'RaMaNa',210); //invalid 

commit;



column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10) check(sname=lower(sname)),smarks number(3));

insert into student values(101,'RAJA',78);  //invalid 

insert into student values(102,'ravi',100); 

insert into student values(103,'RaMaNa',210); //invalid 

commit;


column level
------------
drop table student;

create table student(sno number(3),sname varchar2(10) check(sname=initcap(sname)),smarks number(3));

insert into student values(101,'Raja',78);  

insert into student values(102,'ravi',100); //invalid 

insert into student values(103,'RAMANA',210); //invalid 

commit;


table level
-----------
drop table student;

create table student(sno number(3),sname varchar2(10),smarks number(3), check(sname=initcap(sname)));

insert into student values(101,'Raja',78);  

insert into student values(102,'ravi',100); //invalid 

insert into student values(103,'RAMANA',210); //invalid 

commit;


Q) Write a query to add the constraint to existing table?

	alter table emp ADD primary key(eid);



Q) Write a query to drop the constraint from existing table?

	alter table emp DROP primary key;


Interview Question
==================

Q) Write a query to display employees information from emp table?

	select * from emp;

	or 

	select eid as id,
		upper(ename) as ename, 		
			TO_CHAR(esal,'$99,999') as esal,
				deptno, 
				   lower(job) as designation,
					comm as commission from emp;


Q) What is the difference between ROWID and ROWNUM?

ROWID
------
ROWID is a memory location/address where our records will store in a database table.

ROWID is permanent.

ex:
	select eid,ename,esal from emp;
	select rowid,eid,ename,esal from emp;

ROWNUM 
-------
ROWNUM always starts with '1' and increment by '1'.

ROWNUM values are temperory.

ex:
	select eid,ename,esal from emp;
	select rownum,eid,ename,esal from emp;
	select rowid,rownum,eid,ename,esal from emp;


Q) Write a query to read first three records from emp table?


	select * from emp where rownum<=3;
	or 
	select * from emp where rownum IN (1,2,3);



Q) Write a query to display 4th record from employee table?

	select * from emp where rownum<=4
	minus
	select * from emp where rownum<=3;

	













